import React from 'react';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import AppBar from '@material-ui/core/AppBar';
import Tabs from '@material-ui/core/Tabs';
import Tab from '@material-ui/core/Tab';
import Scanner from '@material-ui/icons/Scanner';
import ReportProblem from '@material-ui/icons/ReportProblem';
import Build from '@material-ui/icons/Build';
import Help from '@material-ui/icons/Help';
import ScanTab from "./scan_tab";
import SettingTab from "./setting_tab";
import HelpTab from "./help_tab";
import ReportTab from "./report_tab";

import Typography from '@material-ui/core/Typography';

function TabContainer(props) {
  return (
    <Typography component="div" style={{ padding: 8 * 3 }}>
      {props.children}
    </Typography>
  );
}

TabContainer.propTypes = {
  children: PropTypes.node.isRequired,
};

const styles = theme => ({
  root: {
    flexGrow: 1,
    width: '100%',
    backgroundColor: theme.palette.background.paper,
  },
});

class APPTabs extends React.Component {
  state = {
    value: 0,
  };

  handleChange = (event, value) => {
    this.setState({ value });
  };

  render() {
    const { classes } = this.props;
    const { value } = this.state;

    return (
      <div className={classes.root}>
        <AppBar position="static" color="default">
          <Tabs
            value={value}
            onChange={this.handleChange}
            scrollable
            scrollButtons="on"
            indicatorColor="primary"
            textColor="primary"
          >
            <Tab label="Malware Scan" icon={<Scanner />} />
            <Tab label="Setting" icon={<Build />} />
            <Tab label="Help & Support" icon={<Help />} />
            <Tab label="Report Problem" icon={<ReportProblem />} />
            
          </Tabs>
        </AppBar>
        {value === 0 && <ScanTab />}
        {value === 1 && <SettingTab/>}
        {value === 2 && <HelpTab />}
        {value === 3 && <ReportTab/>}
       
      </div>
    );
  }
}

APPTabs.propTypes = {
  classes: PropTypes.object.isRequired,
};

export default withStyles(styles)(APPTabs);
