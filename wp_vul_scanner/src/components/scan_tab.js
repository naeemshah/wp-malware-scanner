import React from 'react';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography';
import { connect } from 'react-redux';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemText from '@material-ui/core/ListItemText';
import Avatar from '@material-ui/core/Avatar';
import FolderIcon from '@material-ui/icons/Folder';
import FileCopyIcon from '@material-ui/icons/FileCopy';
import WorkIcon from '@material-ui/icons/Work';
import BeachAccessIcon from '@material-ui/icons/BeachAccess';
import Grid from '@material-ui/core/Grid';
import Checkbox from '@material-ui/core/Checkbox';
import {getRootFiles} from "../actions/fileaAtions"
import CircularProgress from '@material-ui/core/CircularProgress';


const styles = theme => ({
    root: {
      width: '100%',
      flexGrow: 1,
      backgroundColor: theme.palette.background.paper,
    },
    title: {
        margin: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 2}px`,
      }
  });



@connect(store => {
    return {
      test: store.data.test,
      rootFiles:store.file.rootFiles,
      featching:store.file.featching
    };
})




class ScanTab extends React.Component {

    componentWillMount(){
          this.props.dispatch(getRootFiles())
    }


    render(){
        const { classes } = this.props;
        if(this.props.featching)
        return(<CircularProgress className={classes.progress} />);
        return(
            <div className={classes.root}>
            <Grid
            
            >
            <Grid item xs={6} 
            
            >
            <Typography variant="title" className={classes.title}>
              Files and Folders
            </Typography>
            <List>
         {this.props.rootFiles.map((e,i)=>{
             let file = Object.keys(e)[0],  // need to add file checks
             icon = (e[Object.keys(e)[0]]) ?  <FolderIcon /> : <FileCopyIcon />;

                 
             return (<ListItem dense
            button>
      <Checkbox
              checked={1}
              tabIndex={-1}
              disableRipple
            />
        <Avatar>
        {icon}
        </Avatar>
        <ListItemText primary={file}  />
      </ListItem>);

         })}
       
      </List>
      </Grid>
      </Grid>
      </div>
        );
    }

}

ScanTab.propTypes = {
    classes: PropTypes.object.isRequired,
  };
  
  export default withStyles(styles)(ScanTab);


